# WARNING - Do not modify any of the properties when an application
#  using this configuration file has been installed as a service or daemon.
#  Please uninstall the service before modifying this file.  The
#  service must then be reinstalled.

#********************************************************************
# Java Executable Properties
#********************************************************************
# Java Application
wrapper.java.command=java

# or define conditions for YAJSW searching for a JVM
# currently only valid for windows
#wrapper.java.command.minVersion=1.5
#wrapper.java.command.maxVersion=1.6
#wrapper.java.command.jreOnly=true
#wrapper.java.command.jdkOnly=true
#wrapper.java.command.preferJre=true
#wrapper.java.command.preferJdk=true
#wrapper.java.command.javaw=true

# copy java.exe to <tmp>/java_<customProcName>_nnnn.exe
#wrapper.java.customProcName=

#********************************************************************
# working directory
#********************************************************************
wrapper.working.dir=.

# Java Main class.  
# YAJSW: default is "org.rzo.yajsw.app.WrapperJVMMain" 
# DO NOT SET THIS PROPERTY UNLESS YOU HAVE YOUR OWN IMPLEMENTATION
wrapper.java.mainclass=modbus.control.service.WrapperMainServiceWin

#********************************************************************
# Application main class or native executable
# One of the following properties MUST be defined
#********************************************************************

# Java Application main class
wrapper.java.app.mainclass=modbus.control.EmbeddedJetty

# or jar file
#wrapper.java.app.jar=

# or groovy script file
#wrapper.groovy=

#or a native executable
#wrapper.image=

#********************************************************************
# Application process cpu priority and affinity
#********************************************************************

# Process priority: LOW, BELOW_NORMAL, NORMAL, ABOVE_NORMAL, HIGH
#wrapper.priority

# CPU affinity of the process. this is a bit-array representing the cpus
#wrapper.affinity=


#********************************************************************
# Application Account
# Equivalent to Posix sudo or windows runas
# Note Posix: 
#     <group>\<user> (note: use \\ in configuration file). 
#     If no group is configured default group of the user is used
#********************************************************************
#wrapper.app.account=
#wrapper.app.password=

#********************************************************************
# Java/Groovy Application Properties
#********************************************************************

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
# YAJSW: all libs required by YAJSW are in the manifest of the wrapper.jar -> only classpath of your application is required

# YAJSW dependencies
wrapper.java.classpath.1=com.caucho.jar
wrapper.java.classpath.2=com.jeta.jar
wrapper.java.classpath.3=commons-beanutils.jar
wrapper.java.classpath.4=commons-cli.jar
wrapper.java.classpath.5=commons-collections.jar
wrapper.java.classpath.6=commons-configuration.jar
wrapper.java.classpath.7=commons-digester.jar
wrapper.java.classpath.8=commons-io.jar
wrapper.java.classpath.9=commons-lang.jar
wrapper.java.classpath.10=commons-logging.jar
wrapper.java.classpath.11=commons-vfs.jar
wrapper.java.classpath.12=forms.jar
wrapper.java.classpath.13=groovy-all.jar
wrapper.java.classpath.14=jetty-continuation.jar
wrapper.java.classpath.15=jetty-http.jar
wrapper.java.classpath.16=jetty-io.jar
wrapper.java.classpath.17=jetty-security.jar
wrapper.java.classpath.18=jetty-server.jar
wrapper.java.classpath.19=jetty-servlet.jar
wrapper.java.classpath.20=jetty-util.jar
wrapper.java.classpath.21=jetty-webapp.jar
wrapper.java.classpath.22=jetty-xml.jar
wrapper.java.classpath.23=jna-platform.jar
wrapper.java.classpath.24=jna.jar
wrapper.java.classpath.25=jrexx.jar
wrapper.java.classpath.26=jta.jar
wrapper.java.classpath.27=junit.jar
wrapper.java.classpath.28=netty.jar
wrapper.java.classpath.29=org.rzo.jar
wrapper.java.classpath.30=oro.jar
wrapper.java.classpath.31=plexus-utils.jar
wrapper.java.classpath.32=quartz.jar
wrapper.java.classpath.33=servlet-api.jar
wrapper.java.classpath.34=slf4j-api.jar
wrapper.java.classpath.35=velocity.jar
wrapper.java.classpath.36=wrapper.jar
wrapper.java.classpath.38=formsrt.jar
wrapper.java.classpath.39=hessian4.jar
wrapper.java.classpath.40=ahessian.jar

# Java Library Path
# YAJSW: required dll are encapsulated in jar files -> only library path of your application required
# wrapper.java.library.path.1=../lib

# Java Additional Parameters
#wrapper.java.additional.1=

# Initial Java Heap Size (in MB)
# alternative for wrapper.java.additional.<n>=-Xms
#wrapper.java.initmemory=3

# % of total RAM
#wrapper.java.initmemory.relative=10

# Maximum Java Heap Size (in MB)
# alternative for wrapper.java.additional.<n>=-Xmx
#wrapper.java.maxmemory=64

# % of total RAM
#wrapper.java.maxmemory.relative=30

# JSW requires that main class is set as app.parameter property
# YAJSW: to specify the main class please use wrapper.java.app.mainclass=

#********************************************************************
# Application environment properties.
#********************************************************************
# Adds an environment to the application
#wrapper.app.env.<key>=<value>

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
# wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=DEBUG

# Log file to use for wrapper output logging.
#wrapper.logfile=${wrapper.working.dir}/logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
#wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=5m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=5

#********************************************************************
# Application Console Properties
#********************************************************************
# Indicate if console of the application is visible.
#wrapper.console.visible=false

# Title to use when running as a console
wrapper.console.title=yajsw

#********************************************************************
# Wrapper Windows Service and Posix Daemon Properties
#********************************************************************
# Name of the service
wrapper.ntservice.name=modctrl

# Display name of the service
wrapper.ntservice.displayname=ModbusControl

# Description of the service
wrapper.ntservice.description=Modbus... Web Application

# Service dependencies.  Add dependencies as needed starting from 1
# wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
# wrapper.ntservice.interactive=false

# wrapper service user. only for windows. on *nix system this is root.
# see also wrapper.app.account
#wrapper.ntservice.account=
#wrapper.ntservice.user=

#********************************************************************
# Wrapper Posix Daemon Properties
#********************************************************************
# Directory in which to create and execute daemon init scripts. Default: /etc/init.d
#wrapper.daemon.dir = 

# Directory where to store the wrapper pid file. Default: /var/run
#wrapper.daemon.pid.dir = 

# Directory in which to create K... and S... links. 
# Default: <wrapper.daemon.dir>/rcX.d
# For Ubuntu set to /etc/rcX.d
# The following grooy script should set it correctly for most distros
wrapper.daemon.run_level_dir=${if (new File('/etc/rc0.d').exists()) return '/etc/rcX.d' else return '/etc/init.d/rcX.d'}

# Setting the runlevels and priorities for automatic startup and stop of the daemon.
# Similar syntax as the update_rc.d command
# Default: equivalent to default of update_rc.d
#wrapper.update_rc = start 20 2 3 4 . start 30 5 . stop 80 0 1 6

#********************************************************************
# Wrapper System Tray Properties
#********************************************************************
# enable system tray
wrapper.tray = false

# TCP/IP port. If none is defined multicast discovery is used to find the port
# Set the port in case multicast is not possible.
wrapper.tray.port = 15002

# icon file to use, per default a console icon is used
#wrapper.tray.icon=

#********************************************************************
# Exit Code Properties
# Restart on non zero exit code
#********************************************************************
wrapper.on_exit.0=SHUTDOWN
wrapper.on_exit.default=RESTART

#********************************************************************
# Trigger actions on console output
#********************************************************************
# On Exception show message in system tray
wrapper.filter.trigger.0=Exception
wrapper.filter.script.0=scripts/trayMessage.gv
wrapper.filter.script.0.args=Exception

#********************************************************************
# Wrapper JMX
#
# connect using for example jconsole per remote access using the url
#
# service:jmx:rmi:///jndi/rmi://localhost:1099/server
#
# eventl. change port and server name
#********************************************************************
# Enable wrapper JMX
#wrapper.jmx = true

# JMX RMI port. default is 1099
#wrapper.jmx.rmi.port = 

# JMX RMI credentials
# mandatory if accessing from remote server
#wrapper.jmx.rmi.user =
#wrapper.jmx.rmi.password =

#********************************************************************
# Wrapper timeouts
#********************************************************************
# Number of seconds to allow between the time that the Wrapper starts the application
# and the  application logon to the wrapper.
# Default: 30 seconds
#wrapper.startup.timeout = 

# Number of seconds to allow between the time that the Wrapper asks the application to shutdown and the time that the JVM shuts down. 
# Default: 30 seconds
#wrapper.shutdown.timeout = 

# Number of seconds the wrapper waits for a ping message from the java application.
# If no heart beat is received within a timeout the wrapper assumes that the application
# is non responsive and will restart it.
# Default: 30 seconds
#wrapper.ping.timeout = 



#********************************************************************
# genConfig: further Properties generated by genConfig
#********************************************************************
placeHolderSoGenPropsComeHere=
